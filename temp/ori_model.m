function out = model
%
% ori_model.m
%
% Model exported on Aug 27 2014, 01:21 by COMSOL 4.3.2.189.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/home/sunjun');

model.name('ori.mph');

model.param.set('clinR', '200');
model.param.set('clinH', '790');
model.param.set('portA', '96');
model.param.set('portB', '55');
model.param.set('portL', '70');
model.param.set('theta1', '90');
model.param.set('theta2', '30');
model.param.set('z1', '50');
model.param.set('z2', '200');
model.param.set('water_mat', '65-20*j');
model.param.set('mist_mat', '5-5*j');

model.modelNode.create('mod1');

model.geom.create('geom1', 3);
model.geom('geom1').lengthUnit('mm');
model.geom('geom1').feature.create('cyl1', 'Cylinder');
model.geom('geom1').feature.create('sph1', 'Sphere');
model.geom('geom1').feature.create('cyl2', 'Cylinder');
model.geom('geom1').feature.create('int1', 'Intersection');
model.geom('geom1').feature.create('mir1', 'Mirror');
model.geom('geom1').feature.create('cyl3', 'Cylinder');
model.geom('geom1').feature.create('cone1', 'Cone');
model.geom('geom1').feature.create('rev1', 'Revolve');
model.geom('geom1').feature.create('ext1', 'Extrude');
model.geom('geom1').feature.create('uni1', 'Union');
model.geom('geom1').feature.create('cyl4', 'Cylinder');
model.geom('geom1').feature.create('cyl5', 'Cylinder');
model.geom('geom1').feature.create('rot1', 'Rotate');
model.geom('geom1').feature.create('cyl6', 'Cylinder');
model.geom('geom1').feature.create('cone2', 'Cone');
model.geom('geom1').feature.create('dif1', 'Difference');
model.geom('geom1').feature.create('del2', 'Delete');
model.geom('geom1').feature.create('uni3', 'Union');
model.geom('geom1').feature.create('int2', 'Intersection');
model.geom('geom1').feature.create('del1', 'Delete');
model.geom('geom1').feature.create('blk1', 'Block');
model.geom('geom1').feature.create('blk2', 'Block');
model.geom('geom1').feature.create('uni2', 'Union');
model.geom('geom1').feature.create('blk3', 'Block');
model.geom('geom1').feature.create('blk4', 'Block');
model.geom('geom1').feature('cyl1').set('pos', {'0' '0' '-clinH/2'});
model.geom('geom1').feature('cyl1').set('h', 'clinH');
model.geom('geom1').feature('cyl1').set('r', 'clinR');
model.geom('geom1').feature('sph1').set('r', '250');
model.geom('geom1').feature('sph1').set('pos', {'0' '0' 'clinH/2-150'});
model.geom('geom1').feature('cyl2').set('r', 'clinR');
model.geom('geom1').feature('cyl2').set('pos', {'0' '0' 'clinH/2'});
model.geom('geom1').feature('cyl2').set('h', 'clinH/2');
model.geom('geom1').feature('int1').set('intbnd', false);
model.geom('geom1').feature('int1').set('face', 'all');
model.geom('geom1').feature('int1').selection('input').set({'cyl2' 'sph1'});
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').feature('mir1').selection('input').set({'int1'});
model.geom('geom1').feature('cyl3').set('r', '14.05/2');
model.geom('geom1').feature('cyl3').set('h', '38.57');
model.geom('geom1').feature('cone1').set('r', '14.05/2');
model.geom('geom1').feature('cone1').set('specifytop', 'radius');
model.geom('geom1').feature('cone1').set('rtop', '25/2');
model.geom('geom1').feature('cone1').set('pos', {'0' '0' '38.57'});
model.geom('geom1').feature('cone1').set('h', '15.026');
model.geom('geom1').feature('rev1').set('pos3', {'-38' '0' '15.026+38.57'});
model.geom('geom1').feature('rev1').set('polres', '100');
model.geom('geom1').feature('rev1').set('axis3', {'0' '-1' '0'});
model.geom('geom1').feature('rev1').set('angle2', '90');
model.geom('geom1').feature('rev1').set('axistype', '3d');
model.geom('geom1').feature('rev1').selection('inputface').set('cone1(1)', [3]);
model.geom('geom1').feature('ext1').setIndex('distance', '175', 0);
model.geom('geom1').feature('ext1').selection('inputface').set('rev1(1)', [1]);
model.geom('geom1').feature('uni1').set('face', 'all');
model.geom('geom1').feature('uni1').set('intbnd', false);
model.geom('geom1').feature('uni1').selection('input').set({'cyl3' 'ext1'});
model.geom('geom1').feature('cyl4').set('r', '20/2');
model.geom('geom1').feature('cyl4').set('pos', {'0' '0' '500-15'});
model.geom('geom1').feature('cyl4').set('h', '30');
model.geom('geom1').feature('cyl5').set('axis', {'0' '0' '1'});
model.geom('geom1').feature('cyl5').set('r', '8/2');
model.geom('geom1').feature('cyl5').set('pos', {'-clinR/2' '0' 'clinH/2+100/2+10'});
model.geom('geom1').feature('cyl5').set('h', '40');
model.geom('geom1').feature('rot1').set('axis', {'0' '1' '0'});
model.geom('geom1').feature('rot1').set('pos', {'-clinR/2' '0' 'clinH/2+100/2+10+20'});
model.geom('geom1').feature('rot1').set('rot', '-33');
model.geom('geom1').feature('rot1').selection('input').set({'cyl5'});
model.geom('geom1').feature('cyl6').set('r', '104/2');
model.geom('geom1').feature('cyl6').set('pos', {'0' '0' '-500-15'});
model.geom('geom1').feature('cyl6').set('h', '30');
model.geom('geom1').feature('cone2').set('r', '600');
model.geom('geom1').feature('cone2').set('specifytop', 'radius');
model.geom('geom1').feature('cone2').set('rtop', '0');
model.geom('geom1').feature('cone2').set('pos', {'0' '0' '-500-15'});
model.geom('geom1').feature('cone2').set('h', '500+15');
model.geom('geom1').feature('dif1').set('keep', true);
model.geom('geom1').feature('dif1').set('intbnd', false);
model.geom('geom1').feature('dif1').set('face', 'all');
model.geom('geom1').feature('dif1').selection('input2').set({'int1'});
model.geom('geom1').feature('dif1').selection('input').set({'cyl4'});
model.geom('geom1').feature('del2').selection('input').init;
model.geom('geom1').feature('del2').selection('input').set({'cyl4'});
model.geom('geom1').feature('uni3').set('intbnd', false);
model.geom('geom1').feature('uni3').set('face', 'all');
model.geom('geom1').feature('uni3').selection('input').set({'cyl1' 'cyl6' 'int1' 'mir1'});
model.geom('geom1').feature('int2').set('keep', true);
model.geom('geom1').feature('int2').set('intbnd', false);
model.geom('geom1').feature('int2').set('face', 'all');
model.geom('geom1').feature('int2').selection('input').set({'cone2' 'uni3'});
model.geom('geom1').feature('del1').selection('input').init;
model.geom('geom1').feature('del1').selection('input').set({'cone2'});
model.geom('geom1').feature('blk1').set('size', {'portL' 'portA' 'portB'});
model.geom('geom1').feature('blk1').set('base', 'center');
model.geom('geom1').feature('blk1').set('pos', {'clinR*cos(theta1/180*pi)' 'clinR*sin(theta1/180*pi)' 'z1'});
model.geom('geom1').feature('blk1').set('rot', 'theta1');
model.geom('geom1').feature('blk2').set('size', {'portL' 'portA' 'portB'});
model.geom('geom1').feature('blk2').set('base', 'center');
model.geom('geom1').feature('blk2').set('pos', {'clinR*cos(theta2/180*pi)' 'clinR*sin(theta2/180*pi)' 'z2'});
model.geom('geom1').feature('blk2').set('rot', 'theta2');
model.geom('geom1').feature('uni2').set('intbnd', false);
model.geom('geom1').feature('uni2').set('face', 'all');
model.geom('geom1').feature('uni2').selection('input').set({'blk1' 'blk2' 'uni3'});
model.geom('geom1').feature('blk3').set('pos', {'(clinR+22-10)*cos(theta1/180*pi)' '(clinR+22-10)*sin(theta1/180*pi)' 'z1'});
model.geom('geom1').feature('blk3').set('size', {'15' 'portA' 'portB'});
model.geom('geom1').feature('blk3').set('rot', 'theta1');
model.geom('geom1').feature('blk3').set('base', 'center');
model.geom('geom1').feature('blk4').set('pos', {'(clinR+22-10)*cos(theta2/180*pi)' '(clinR+22-10)*sin(theta2/180*pi)' 'z2'});
model.geom('geom1').feature('blk4').set('size', {'15' 'portA' 'portB'});
model.geom('geom1').feature('blk4').set('rot', 'theta2');
model.geom('geom1').feature('blk4').set('base', 'center');
model.geom('geom1').run;

model.selection.create('sel1', 'Explicit');
model.selection('sel1').geom('geom1', 2);
model.selection('sel1').set([48]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').geom('geom1', 2);
model.selection('sel2').set([97]);
model.selection('sel1').name('port1');
model.selection('sel1').name('Explicit 1');
model.selection('sel2').name('port2');
model.selection('sel2').name('Explicit 2');

model.material.create('mat1');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.material.create('mat2');
model.material('mat2').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat2').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat2').selection.set([1 4]);
model.material.create('mat3');
model.material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').selection.set([7 10]);
model.material.create('mat4');
model.material('mat4').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat4').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('mat4').selection.set([2]);

model.physics.create('emw', 'ElectromagneticWaves', 'geom1');
model.physics('emw').feature.create('port1', 'Port', 2);
model.physics('emw').feature('port1').selection.named('sel1');
model.physics('emw').feature.create('port2', 'Port', 2);
model.physics('emw').feature('port2').selection.named('sel2');
model.physics('emw').feature.create('pec2', 'PerfectElectricConductor', 2);
model.physics('emw').feature('pec2').selection.set([16 17 18 19 28 30 31 32 49 50 51 52 53 54 60 61 69 72 75 76]);
model.physics('emw').feature.create('sctr1', 'Scattering', 2);
model.physics('emw').feature('sctr1').selection.set([1 22 36 59]);

model.mesh.create('mesh1', 'geom1');
model.mesh('mesh1').feature.create('ftet1', 'FreeTet');
model.mesh('mesh1').feature.create('ftet2', 'FreeTet');
model.mesh('mesh1').feature.create('ftet3', 'FreeTet');
model.mesh('mesh1').feature.create('ftet4', 'FreeTet');
model.mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet1').selection.set([2]);
model.mesh('mesh1').feature('ftet1').feature.create('size1', 'Size');
model.mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('ftet2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet2').selection.set([1 4 5 6 9]);
model.mesh('mesh1').feature('ftet2').feature.create('size1', 'Size');
model.mesh('mesh1').feature('ftet2').feature('size1').selection.geom('geom1');
model.mesh('mesh1').feature('ftet3').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet3').selection.set([7 10]);
model.mesh('mesh1').feature('ftet3').feature.create('size1', 'Size');
model.mesh('mesh1').feature('ftet3').feature('size1').selection.geom('geom1');

model.material('mat1').name('Air');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat1').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02897/8.314/T,pA)'; 'T' 'd(pA*0.02897/8.314/T,T)'});
model.material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '0' '1'; 'T' '0' '1'});
model.material('mat1').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/8.314/T');
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat1').propertyGroup('def').func('cs').set('argders', {'T' 'd(sqrt(1.4*287*T),T)'});
model.material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '0' '1'});
model.material('mat1').propertyGroup('def').func('cs').set('dermethod', 'manual');
model.material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*287*T)');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T[1/K])[Pa*s]');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T[1/K])[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', 'rho(pA[1/Pa],T[1/K])[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T[1/K])[m/s]');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('mat1').propertyGroup('def').addInput('pressure');
model.material('mat2').name('Water_mat');
model.material('mat2').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat2').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat2').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('rho').set('pieces', {'273.15' '553.75' '838.466135+1.40050603*T^1-0.0030112376*T^2+3.71822313E-7*T^3'});
model.material('mat2').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat2').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat2').propertyGroup('def').func('cs').set('table', {'273' '1403'; '278' '1427'; '283' '1447'; '293' '1481'; '303' '1507'; '313' '1526'; '323' '1541'; '333' '1552'; '343' '1555'; '353' '1555';  ...
'363' '1550'; '373' '1543'});
model.material('mat2').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat2').propertyGroup('def').set('dynamicviscosity', 'eta(T[1/K])[Pa*s]');
model.material('mat2').propertyGroup('def').set('ratioofspecificheat', '1.0');
model.material('mat2').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', 'Cp(T[1/K])[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('density', 'rho(T[1/K])[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]'});
model.material('mat2').propertyGroup('def').set('soundspeed', 'cs(T[1/K])[m/s]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'water_mat' '0' '0' '0' 'water_mat' '0' '0' '0' 'water_mat'});
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').addInput('temperature');
model.material('mat3').name('Silica glass');
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'2.09' '0' '0' '0' '2.09' '0' '0' '0' '2.09'});
model.material('mat3').propertyGroup('def').set('density', '2203[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.material('mat3').propertyGroup('Enu').set('youngsmodulus', '73.1e9[Pa]');
model.material('mat3').propertyGroup('Enu').set('poissonsratio', '0.17');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', '');
model.material('mat3').propertyGroup('RefractiveIndex').set('ki', '');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.material('mat3').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat4').name('Mist_mat');
model.material('mat4').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat4').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat4').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('rho').set('pieces', {'273.15' '553.75' '838.466135+1.40050603*T^1-0.0030112376*T^2+3.71822313E-7*T^3'});
model.material('mat4').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat4').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat4').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat4').propertyGroup('def').func('cs').set('table', {'273' '1403'; '278' '1427'; '283' '1447'; '293' '1481'; '303' '1507'; '313' '1526'; '323' '1541'; '333' '1552'; '343' '1555'; '353' '1555';  ...
'363' '1550'; '373' '1543'});
model.material('mat4').propertyGroup('def').set('dynamicviscosity', 'eta(T[1/K])[Pa*s]');
model.material('mat4').propertyGroup('def').set('ratioofspecificheat', '1.0');
model.material('mat4').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat4').propertyGroup('def').set('heatcapacity', 'Cp(T[1/K])[J/(kg*K)]');
model.material('mat4').propertyGroup('def').set('density', 'rho(T[1/K])[kg/m^3]');
model.material('mat4').propertyGroup('def').set('thermalconductivity', {'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]'});
model.material('mat4').propertyGroup('def').set('soundspeed', 'cs(T[1/K])[m/s]');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'mist_mat' '0' '0' '0' 'mist_mat' '0' '0' '0' 'mist_mat'});
model.material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat4').propertyGroup('def').addInput('temperature');

model.physics('emw').feature('port1').set('PortExcitation', 'on');
model.physics('emw').feature('port1').set('Pin', '500');
model.physics('emw').feature('port1').set('PortType', 'Rectangular');
model.physics('emw').feature('port2').set('PortExcitation', 'on');
model.physics('emw').feature('port2').set('Pin', '500');
model.physics('emw').feature('port2').set('PortType', 'Rectangular');

model.mesh('mesh1').feature('size').set('hauto', 1);
model.mesh('mesh1').feature('ftet1').feature('size1').set('hauto', 3);
model.mesh('mesh1').feature('ftet1').feature('size1').set('table', 'cfd');
model.mesh('mesh1').feature('ftet2').feature('size1').set('hauto', 2);
model.mesh('mesh1').feature('ftet3').feature('size1').set('hauto', 1);
model.mesh('mesh1').run;

model.study.create('std1');
model.study('std1').feature.create('freq', 'Frequency');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').feature.create('st1', 'StudyStep');
model.sol('sol1').feature.create('v1', 'Variables');
model.sol('sol1').feature.create('s1', 'Stationary');
model.sol('sol1').feature('s1').feature.create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature.create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').feature.create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature.create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature.create('sv1', 'SORVector');
model.sol('sol1').feature('s1').feature.remove('fcDef');

model.study('std1').feature('freq').set('initstudyhide', 'on');
model.study('std1').feature('freq').set('initsolhide', 'on');
model.study('std1').feature('freq').set('notstudyhide', 'on');
model.study('std1').feature('freq').set('notsolhide', 'on');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').feature.create('mslc1', 'Multislice');

model.study('std1').feature('freq').set('plist', '2.45[GHz]');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').name('Compile Equations: Frequency Domain {freq}');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'2.45[GHz]'});
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'fgmres');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sv1').set('sorvecdof', {'mod1_E'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sv1').set('sorvecdof', {'mod1_E'});
model.sol('sol1').runAll;

model.result('pg1').name('Electric Field (emw)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').feature('mslc1').name('Multislice');

out = model;
